"""Add sensor_devices

Revision ID: 6e20d8a1cc50
Revises: b85486f4fec0
Create Date: 2024-02-13 17:34:42.460931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '6e20d8a1cc50'
down_revision: Union[str, None] = 'b85486f4fec0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensordevice',
    sa.Column('parameter_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parameter_acronym', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parameter_unit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parameter_db_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('installed_on', sa.DateTime(), nullable=True),
    sa.Column('calibrated_on', sa.DateTime(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_sensordevice_id'), 'sensordevice', ['id'], unique=False)
    op.create_index(op.f('ix_sensordevice_iterator'), 'sensordevice', ['iterator'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sensordevice_iterator'), table_name='sensordevice')
    op.drop_index(op.f('ix_sensordevice_id'), table_name='sensordevice')
    op.drop_table('sensordevice')
    # ### end Alembic commands ###
