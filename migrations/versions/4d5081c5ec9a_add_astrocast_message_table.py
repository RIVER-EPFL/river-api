"""Add Astrocast message table

Revision ID: 4d5081c5ec9a
Revises: 
Create Date: 2024-02-08 13:32:50.960970

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = '4d5081c5ec9a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('astrocastmessage',
    sa.Column('requested_at', sa.DateTime(), nullable=False),
    sa.Column('messageGuid', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('deviceGuid', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('receivedDate', sa.DateTime(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('messageSize', sa.Integer(), nullable=True),
    sa.Column('callbackDeliveryStatus', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('messageGuid')
    )
    op.create_index(op.f('ix_astrocastmessage_id'), 'astrocastmessage', ['id'], unique=False)
    op.create_index(op.f('ix_astrocastmessage_iterator'), 'astrocastmessage', ['iterator'], unique=False)
    op.create_index(op.f('ix_astrocastmessage_requested_at'), 'astrocastmessage', ['requested_at'], unique=False)
    op.create_geospatial_table('station',
    sa.Column('geom', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('time_added_utc', sa.DateTime(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_geospatial_index('idx_station_geom', 'station', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_station_id'), 'station', ['id'], unique=False)
    op.create_index(op.f('ix_station_iterator'), 'station', ['iterator'], unique=False)
    op.create_index(op.f('ix_station_name'), 'station', ['name'], unique=False)
    op.create_index(op.f('ix_station_time_added_utc'), 'station', ['time_added_utc'], unique=False)
    op.create_table('sensordata',
    sa.Column('instrument_seq', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('time_zone', sa.Integer(), nullable=True),
    sa.Column('temperature_1', sa.Float(), nullable=True),
    sa.Column('temperature_2', sa.Float(), nullable=True),
    sa.Column('temperature_3', sa.Float(), nullable=True),
    sa.Column('river_moisture_count', sa.Float(), nullable=True),
    sa.Column('shake', sa.Integer(), nullable=True),
    sa.Column('error_flat', sa.Integer(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('station_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['station_id'], ['station.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_sensordata_id'), 'sensordata', ['id'], unique=False)
    op.create_index(op.f('ix_sensordata_instrument_seq'), 'sensordata', ['instrument_seq'], unique=False)
    op.create_index(op.f('ix_sensordata_iterator'), 'sensordata', ['iterator'], unique=False)
    op.create_index(op.f('ix_sensordata_river_moisture_count'), 'sensordata', ['river_moisture_count'], unique=False)
    op.create_index(op.f('ix_sensordata_station_id'), 'sensordata', ['station_id'], unique=False)
    op.create_index(op.f('ix_sensordata_temperature_1'), 'sensordata', ['temperature_1'], unique=False)
    op.create_index(op.f('ix_sensordata_temperature_2'), 'sensordata', ['temperature_2'], unique=False)
    op.create_index(op.f('ix_sensordata_temperature_3'), 'sensordata', ['temperature_3'], unique=False)
    op.create_index(op.f('ix_sensordata_time'), 'sensordata', ['time'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sensordata_time'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_temperature_3'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_temperature_2'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_temperature_1'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_station_id'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_river_moisture_count'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_iterator'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_instrument_seq'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_id'), table_name='sensordata')
    op.drop_table('sensordata')
    op.drop_index(op.f('ix_station_time_added_utc'), table_name='station')
    op.drop_index(op.f('ix_station_name'), table_name='station')
    op.drop_index(op.f('ix_station_iterator'), table_name='station')
    op.drop_index(op.f('ix_station_id'), table_name='station')
    op.drop_geospatial_index('idx_station_geom', table_name='station', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('station')
    op.drop_index(op.f('ix_astrocastmessage_requested_at'), table_name='astrocastmessage')
    op.drop_index(op.f('ix_astrocastmessage_iterator'), table_name='astrocastmessage')
    op.drop_index(op.f('ix_astrocastmessage_id'), table_name='astrocastmessage')
    op.drop_table('astrocastmessage')
    # ### end Alembic commands ###
