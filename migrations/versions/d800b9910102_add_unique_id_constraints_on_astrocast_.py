"""Add unique ID constraints on astrocast messages and station sensor assignments, update station data fields

Revision ID: d800b9910102
Revises: 4af189ae2136
Create Date: 2024-05-01 09:40:18.643353

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d800b9910102"
down_revision: Union[str, None] = "4af189ae2136"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "astrocastmessage_messageGuid_key", "astrocastmessage", type_="unique"
    )
    op.create_unique_constraint(
        "local_id_constraint", "astrocastmessage", ["id"]
    )
    op.create_unique_constraint(
        "message_guid_constraint", "astrocastmessage", ["messageGuid"]
    )
    op.create_unique_constraint(
        "station_sensor_id_constraint", "stationsensorassignments", ["id"]
    )
    op.add_column(
        "stationdata",
        sa.Column(
            "astrocast_message_id",
            sqlmodel.sql.sqltypes.GUID(),
            nullable=False,
        ),
    )
    op.add_column(
        "stationdata",
        sa.Column(
            "station_sensor_id", sqlmodel.sql.sqltypes.GUID(), nullable=False
        ),
    )
    op.add_column(
        "stationdata", sa.Column("raw_value", sa.Integer(), nullable=False)
    )
    op.add_column(
        "stationdata",
        sa.Column("last_corrected_at", sa.DateTime(), nullable=False),
    )
    op.add_column(
        "stationdata", sa.Column("corrected_value", sa.Float(), nullable=True)
    )
    op.add_column(
        "stationdata",
        sa.Column("calibration_parameters", sa.JSON(), nullable=True),
    )
    op.drop_index("ix_stationdata_last_updated", table_name="stationdata")
    op.drop_index("ix_stationdata_parameter_id", table_name="stationdata")
    op.drop_index("ix_stationdata_station_id", table_name="stationdata")
    op.drop_index("ix_stationdata_time", table_name="stationdata")
    op.drop_index("ix_stationdata_value", table_name="stationdata")
    op.create_index(
        op.f("ix_stationdata_astrocast_message_id"),
        "stationdata",
        ["astrocast_message_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_stationdata_corrected_value"),
        "stationdata",
        ["corrected_value"],
        unique=False,
    )
    op.create_index(
        op.f("ix_stationdata_last_corrected_at"),
        "stationdata",
        ["last_corrected_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_stationdata_raw_value"),
        "stationdata",
        ["raw_value"],
        unique=False,
    )
    op.create_index(
        op.f("ix_stationdata_station_sensor_id"),
        "stationdata",
        ["station_sensor_id"],
        unique=False,
    )
    op.create_foreign_key(
        None,
        "stationdata",
        "astrocastmessage",
        ["astrocast_message_id"],
        ["id"],
    )
    op.create_foreign_key(None, "stationdata", "sensor", ["sensor_id"], ["id"])
    op.create_foreign_key(
        None,
        "stationdata",
        "stationsensorassignments",
        ["station_sensor_id"],
        ["id"],
    )
    op.drop_column("stationdata", "station_id")
    op.drop_column("stationdata", "value")
    op.drop_column("stationdata", "parameter_id")
    op.drop_column("stationdata", "last_updated")
    op.drop_column("stationdata", "time")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "station_sensor_id_constraint",
        "stationsensorassignments",
        type_="unique",
    )
    op.add_column(
        "stationdata",
        sa.Column(
            "time", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "stationdata",
        sa.Column(
            "last_updated",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "stationdata",
        sa.Column(
            "parameter_id", sa.UUID(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "stationdata",
        sa.Column(
            "value",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "stationdata",
        sa.Column(
            "station_id", sa.UUID(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "stationdata", type_="foreignkey")
    op.drop_constraint(None, "stationdata", type_="foreignkey")
    op.drop_constraint(None, "stationdata", type_="foreignkey")
    op.drop_index(
        op.f("ix_stationdata_station_sensor_id"), table_name="stationdata"
    )
    op.drop_index(op.f("ix_stationdata_raw_value"), table_name="stationdata")
    op.drop_index(
        op.f("ix_stationdata_last_corrected_at"), table_name="stationdata"
    )
    op.drop_index(
        op.f("ix_stationdata_corrected_value"), table_name="stationdata"
    )
    op.drop_index(
        op.f("ix_stationdata_astrocast_message_id"), table_name="stationdata"
    )
    op.create_index(
        "ix_stationdata_value", "stationdata", ["value"], unique=False
    )
    op.create_index(
        "ix_stationdata_time", "stationdata", ["time"], unique=False
    )
    op.create_index(
        "ix_stationdata_station_id",
        "stationdata",
        ["station_id"],
        unique=False,
    )
    op.create_index(
        "ix_stationdata_parameter_id",
        "stationdata",
        ["parameter_id"],
        unique=False,
    )
    op.create_index(
        "ix_stationdata_last_updated",
        "stationdata",
        ["last_updated"],
        unique=False,
    )
    op.drop_column("stationdata", "calibration_parameters")
    op.drop_column("stationdata", "corrected_value")
    op.drop_column("stationdata", "last_corrected_at")
    op.drop_column("stationdata", "raw_value")
    op.drop_column("stationdata", "station_sensor_id")
    op.drop_column("stationdata", "astrocast_message_id")
    op.drop_constraint(
        "message_guid_constraint", "astrocastmessage", type_="unique"
    )
    op.drop_constraint(
        "local_id_constraint", "astrocastmessage", type_="unique"
    )
    op.create_unique_constraint(
        "astrocastmessage_messageGuid_key", "astrocastmessage", ["messageGuid"]
    )
    # ### end Alembic commands ###
