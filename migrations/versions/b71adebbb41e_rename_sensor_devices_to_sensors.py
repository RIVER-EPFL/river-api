"""Rename sensor devices to sensors

Revision ID: b71adebbb41e
Revises: 
Create Date: 2024-02-14 14:18:04.037117

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'b71adebbb41e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('astrocastmessage',
    sa.Column('requested_at', sa.DateTime(), nullable=False),
    sa.Column('messageGuid', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('deviceGuid', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('createdDate', sa.DateTime(), nullable=True),
    sa.Column('receivedDate', sa.DateTime(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('messageSize', sa.Integer(), nullable=True),
    sa.Column('callbackDeliveryStatus', sa.Integer(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('messageGuid')
    )
    op.create_index(op.f('ix_astrocastmessage_id'), 'astrocastmessage', ['id'], unique=False)
    op.create_index(op.f('ix_astrocastmessage_iterator'), 'astrocastmessage', ['iterator'], unique=False)
    op.create_index(op.f('ix_astrocastmessage_requested_at'), 'astrocastmessage', ['requested_at'], unique=False)
    op.create_table('sensor',
    sa.Column('parameter_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parameter_acronym', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parameter_unit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parameter_db_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('calibrated_on', sa.DateTime(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_sensor_id'), 'sensor', ['id'], unique=False)
    op.create_index(op.f('ix_sensor_iterator'), 'sensor', ['iterator'], unique=False)
    op.create_table('station',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('acronym', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('catchment_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('time_added_utc', sa.DateTime(), nullable=True),
    sa.Column('x_coordinate', sa.Float(), nullable=True),
    sa.Column('y_coordinate', sa.Float(), nullable=True),
    sa.Column('associated_astrocast_device', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_station_id'), 'station', ['id'], unique=False)
    op.create_index(op.f('ix_station_iterator'), 'station', ['iterator'], unique=False)
    op.create_index(op.f('ix_station_name'), 'station', ['name'], unique=False)
    op.create_index(op.f('ix_station_time_added_utc'), 'station', ['time_added_utc'], unique=False)
    op.create_table('stationsensorassignments',
    sa.Column('iterator', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('installed_on', sa.DateTime(), nullable=False),
    sa.Column('sensor_position', sa.Integer(), nullable=False),
    sa.Column('station_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('sensor_device_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['sensor_device_id'], ['sensor.id'], ),
    sa.ForeignKeyConstraint(['station_id'], ['station.id'], ),
    sa.PrimaryKeyConstraint('iterator'),
    sa.UniqueConstraint('sensor_position', 'station_id', 'sensor_device_id', name='your_unique_constraint_name')
    )
    op.create_index(op.f('ix_stationsensorassignments_id'), 'stationsensorassignments', ['id'], unique=False)
    op.create_index(op.f('ix_stationsensorassignments_iterator'), 'stationsensorassignments', ['iterator'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stationsensorassignments_iterator'), table_name='stationsensorassignments')
    op.drop_index(op.f('ix_stationsensorassignments_id'), table_name='stationsensorassignments')
    op.drop_table('stationsensorassignments')
    op.drop_index(op.f('ix_station_time_added_utc'), table_name='station')
    op.drop_index(op.f('ix_station_name'), table_name='station')
    op.drop_index(op.f('ix_station_iterator'), table_name='station')
    op.drop_index(op.f('ix_station_id'), table_name='station')
    op.drop_table('station')
    op.drop_index(op.f('ix_sensor_iterator'), table_name='sensor')
    op.drop_index(op.f('ix_sensor_id'), table_name='sensor')
    op.drop_table('sensor')
    op.drop_index(op.f('ix_astrocastmessage_requested_at'), table_name='astrocastmessage')
    op.drop_index(op.f('ix_astrocastmessage_iterator'), table_name='astrocastmessage')
    op.drop_index(op.f('ix_astrocastmessage_id'), table_name='astrocastmessage')
    op.drop_table('astrocastmessage')
    # ### end Alembic commands ###
